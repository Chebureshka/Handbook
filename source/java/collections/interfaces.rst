.. include:: ../../defs.rst

–ò–µ—Ä–∞—Ä—Ö–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ 
********************************

.. container:: left-col

  * Iterable

    * `Collection`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html>`__ 

      * **AbstractCollection**

      * `List`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/List.html>`__

        * **AbstractList**

          * **AbstractSequentialList**

        * `Queue`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html>`__

          * **AbstractQueue**

          * `BlockingQueue`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html>`__

            * `TransferQueue`_ `üìñ <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TransferQueue.html>`__

          * `Deque`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Deque.html>`__

            * `BlockingDeque`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingDeque.html>`__

      * `Set`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Set.html>`__

        * **AbstractSet**

        * `SortedSet`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html>`__

          * `NavigableSet`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/NavigableSet.html>`__

  * `Map`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Map.html>`__

    * **AbstractMap**

    * `SortedMap`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html>`__

      * `NavigableMap`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html>`__

    * `ConcurrentMap`_ `üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html>`__

      * `ConcurrentNavigableMap`_ `üìñ <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentNavigableMap.html>`__



Collection
===================================================================================================================

.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–∞–≤–µ JDK c –≤–µ—Ä—Å–∏–∏ 1.2 –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—â–∏–º–∏ –¥–ª—è –≤—Å–µ—Ö –µ–≥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä ``size()``, ``isEmpty()``, ``add(E e)`` –∏ –¥—Ä.). 

  –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª—è–º–±–¥–∞–º–∏ (—Ç–∞–∫–∏–µ –∫–∞–∫ ``stream()``, ``parallelStream()``, ``removeIf(Predicate<? super E> filter)`` –∏ –¥—Ä.) –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Å Java 8.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html>`__ 

    .. container:: remark-block

      .. rubric:: –ú–µ—Ç–æ–¥—ã:

      ``add``, ``addAll``, ``remove``, ``removeAll``, ``removeIf``, ``retainAll``, ``size``, ``clear``, ``contains``, ``containsAll``, ``stream``, ``parallelStream``, ``iterator``, ``spliterator``, ``toArray``, ``toArray(T[] a)``
    


List
-----------------------

.. container:: left-col

  –†–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é (—Ç–∞–∫ –∫–∞–∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ö—Ä–∞–Ω–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –±—É–¥–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ).

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/List.html>`__ 

    .. container:: remark-block

      .. rubric:: –ú–µ—Ç–æ–¥—ã:

      ``indexOf``, ``get``, ``add``/``remove``/``set(index, )``, ``sort``, ``sublist``


Queue
-----------------------

.. container:: left-col

  –≠—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –≤—Å—Ç–∞–≤–∫–∏ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∞ –∏–º–µ–Ω–Ω–æ ‚Äî –æ—á–µ—Ä–µ–¥–∏ FIFO (first-in-first-out). 

  –ü–æ–º–∏–º–æ –º–µ—Ç–æ–¥–æ–≤, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Collection, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ—á–µ—Ä–µ–¥—å. 

  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π –¥–∞–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–∫–µ—Ç–µ java.util.concurrent

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html>`__ 

BlockingQueue
-----------------------


.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–ª–≤–µ–Ω–∏–∏/–ø–æ–ª—É—á–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞. 

  –ü–æ–º–∏–º–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä queue, –¥–æ–±–∞–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–≥–∏—Ä—É—é—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É –Ω–∞ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ queue. 
  –¢–∞–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–Ω—É—é queue, –æ–¥–∏–Ω –º–µ—Ç–æ–¥ –∫–∏–Ω–µ—Ç IllegalStateException, –¥—Ä—É–≥–æ–π –≤–µ—Ä–Ω–µ—Ç false, —Ç—Ä–µ—Ç–∏–π –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫, –ø–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –º–µ—Å—Ç–æ, —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∂–µ –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫ —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –≤–µ—Ä–Ω–µ—Ç false, –µ—Å–ª–∏ –º–µ—Å—Ç–æ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è (—Å–º `–û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—á–µ—Ä–µ–¥–∏`_). 

  –¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç null –∑–Ω–∞—á–µ–Ω–∏—è, —Ç.–∫. —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ poll –∫–∞–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–∞–π–º–∞—É—Ç–∞.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html>`__ 

        `–ë–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ—á–µ—Ä–µ–¥–∏ –ø–∞–∫–µ—Ç–∞ concurrent <http://java-online.ru/concurrent-queue-block.xhtml>`__ 

TransferQueue
-----------------------
.. container:: left-col

  –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–µ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ BlockingQueue, –≥–¥–µ –ø–æ—Ç–æ–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏, –µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞—è, –ª–∏–±–æ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø–æ–ª–Ω–∞—è, –æ—á–µ—Ä–µ–¥–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TransferQueue –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ—Ç–æ–∫ –∑–∞–ø–∏—Å–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫ –Ω–µ –∏–∑–≤–ª–µ—á–µ—Ç —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ transfer.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TransferQueue.html>`__ 

Deque
-----------------------
.. container:: left-col

  –î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –æ—á–µ—Ä–µ–¥—å (Double ended queue), –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∫–∞–∫ —Å–æ —Å—Ç–µ–∫–æ–º –∏ –∫–∞–∫ —Å –æ—á–µ—Ä–µ–¥—å—é.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Deque.html>`__ 

BlockingDeque
-----------------------
.. container:: left-col

  –î–≤—É—Å—Ç–æ—Ä–æ–Ω—è—è BlockingQueue.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingDeque.html>`__ 

Set
-----------------------
.. container:: left-col

  –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ. –Ø–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –º–æ–¥–µ–ª—å—é –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–Ω—è—Ç–∏—è ¬´–º–Ω–æ–∂–µ—Å—Ç–≤–æ¬ª.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Set.html>`__ 

SortedSet
-----------------------
.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–±—Ö–æ–¥–∏—Ç—å (–∏ —Ö—Ä–∞–Ω–∏—Ç—å) —ç–ª–µ–º–µ–Ω—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html>`__ 

NavigableSet
-----------------------
.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–µ—Ä–≤—ã–π, –ø–æ—Å–ª–µ–¥–Ω–∏–π).

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/NavigableSet.html>`__ 

Map
=======================
.. container:: left-col

  –î–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∞–∫–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–∞–≤–µ JDK c –≤–µ—Ä—Å–∏–∏ 1.2 –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–∏–¥–∞ ¬´–∫–ª—é—á ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ¬ª. 

  –í –≤–µ—Ä—Å–∏–∏ Java 8 –ø–æ—è–≤–∏–ª–∏—Å—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª—è–º–±–¥–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—á–∞—Å—Ç—É—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ –ª–æ–≥–∏–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (``getOrDefault(Object key, V defaultValue)``, ``putIfAbsent(K key, V value)``).

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/Map.html>`__ 

    .. container:: remark-block

      .. rubric:: –ú–µ—Ç–æ–¥—ã:

      ``put``, ``putAll``, ``remove``, ``keySet``, ``entrySet``, ``clear``, ``containsValue``, ``containsKey``, ``get``, ``replace``, ``values``

SortedMap
-----------------------
.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–±—Ö–æ–¥–∏—Ç—å (–∏ —Ö—Ä–∞–Ω–∏—Ç—å) —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞–ø—ã –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html>`__ 

NavigableMap
-----------------------


.. container:: left-col

  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–µ—Ä–≤—ã–π, –ø–æ—Å–ª–µ–¥–Ω–∏–π).

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html>`__ 

ConcurrentMap
-----------------------


.. container:: left-col

  Map —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∞—Ç–æ–º–∞—Ä–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ + —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ HashMap, TreeMap —Å –ª—É—á—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç–∏.

.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html>`__ 

ConcurrentNavigableMap
-----------------------


.. container:: left-col

  –†–∞—Å—à–∏—Ä—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å NavigableMap –∏ –≤—ã–Ω—É–∂–¥–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ConcurrentNavigableMap –æ–±—ä–µ–∫—Ç—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. 

  –í—Å–µ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –¥–µ–∫–ª–∞—Ä–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ –Ω–µ –∫–∏–¥–∞—é—Ç ConcurrentModificationException.


.. container:: right-col

    .. container:: links-block

        .. rubric:: –°—Å—ã–ª–∫–∏:

        `–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è üìñ <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentNavigableMap.html>`__ 



–û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—á–µ—Ä–µ–¥–∏
===================================================================================================================

.. container:: left-col

  .. table::
    :widths: auto

    +----------+----------------------+-------------------+-------------------+------------------------------+
    |          |Queue |br|            |Queue |br|         |BlockingQueue |br| |BlockingQueue |br|            |
    |          |–í—ã–∑—ã–≤–∞–µ—Ç Exception    |–ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è    |–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞         |–ß—Ç–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π            |
    +==========+======================+===================+===================+==============================+
    |Insert    |add(e)                |offer(e): boolean  |put(e)             |offer(e, time, unit)          |
    +----------+----------------------+-------------------+-------------------+------------------------------+
    |Remove    |remove()              |poll(): E | null   |take()             |poll(time, unit)              |
    +----------+----------------------+-------------------+-------------------+------------------------------+
    |–ü—Ä–æ–≤–µ—Ä–∫–∞  |element()             |peek(): E | null   |–Ω–µ –ø—Ä–∏–º–µ–Ω–∏–º—ã–π      |–Ω–µ –ø—Ä–∏–º–µ–Ω–∏–º—ã–π                 |
    +----------+----------------------+-------------------+-------------------+------------------------------+
    |          |                      |**TransferQueue**: |**TransferQueue**: |**TransferQueue**: |br|       |
    |Transfer  | ---                  ||br| tryTransfer(e)||br| transfer(e)   |tryTransfer(e, timeout, unit) |
    +----------+----------------------+-------------------+-------------------+------------------------------+



–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ Map
===================================================================================================================

.. container:: left-col

  .. container:: code-markup

    ``V putIfAbsent(K key, V value)``
    	It inserts the specified value with the specified key in the map only if it is not already specified.

    ``V compute(K key, (K, V) -> V remappingFunction)``
    	remappingFunction –¥–ª—è key, –∏–ª–∏ null, –µ—Å–ª–∏ –æ—Ç—Å–≤—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç.
    	It is used to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping).

    ``V computeIfAbsent(K key, K -> V mappingFunction)``
    	–†–∞—Å—á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É —Ñ—É–Ω–∫—Ü–∏–µ–π mappingFunction.
    	It is used to compute its value using the given mapping function, if the specified key is not already associated with a value (or is mapped to null), and enters it into this map unless null.

    ``V computeIfPresent(K key, (K, V) -> V remappingFunction)``
    	remappingFunction –¥–ª—è key, –µ—Å–ª–∏ key –µ—Å—Ç—å –∏ –Ω–µ null.
    	It is used to compute a new mapping given the key and its current mapped value if the value for the specified key is present and non-null.

    ``forEach((K, V) -> Void action)``	
    	It performs the given action for each entry in the map until all entries have been processed or the action throws an exception.

    ``V getOrDefault(Object key, V defaultValue)``
    	It returns the value to which the specified key is mapped, or defaultValue if the map contains no mapping for the key.

    ``V merge(K key, V value, (V, V) -> V remappingFunction)``
    	If the specified key is not already associated with a value or is associated with null, associates it with the given non-null value.

    ``void replaceAll((K, V) -> V function)``
    	It replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception.